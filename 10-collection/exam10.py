tup1 = (10, 20, 30, 40, 50, 30)
tup2 = ('c언어', 'python', 'java', 'jsp')
tup3 = tup1 + tup2
tup4 = tup1 * 3

print(tup1)
print(tup2)
print(tup3)
print(tup4)
print('-' * 30)

# 데이터 검사
print('30이 존재하는가 : ',30 in tup1)
print('30이 존재하는가 : ',30 not in tup1)
print('-' * 30)

# 특정 데이터의 갯수
print('30의 갯수 : ', tup1.count(30))
print('20의 갯수 : ', tup1.count(20))
print('-' * 30)

# 특정 데이터의 위치값
print('20의 위치값 : ', tup1.index(20))
print('30의 위치값 : ', tup1.index(30))
print('30의 위치값 : ', tup1.index(30, tup1.index(30) + 1))
print('-' * 30)

# 내장 함수
# 총 데이터 갯수
print('데이터의 갯수 : ', len(tup1))
print('데이터의 최댓값 : ', max(tup1))
print('데이터의 최솟값 : ', min(tup1))
print('데이터의 총합 : ', sum(tup1))
print('데이터의 정렬 : ', sorted(tup1))
print('데이터의 정렬(내림차순) : ', sorted(tup1, reverse=True))
print('-' * 30)

tup5 = (0 for a in range(5)) # 이 방법으로 튜플을 생성할 수 없음
print(tup5)

'''
(10, 20, 30, 40, 50, 30)
('c언어', 'python', 'java', 'jsp')
(10, 20, 30, 40, 50, 30, 'c언어', 'python', 'java', 'jsp')
(10, 20, 30, 40, 50, 30, 10, 20, 30, 40, 50, 30, 10, 20, 30, 40, 50, 30)
------------------------------
30이 존재하는가 :  True
30이 존재하는가 :  False
------------------------------
30의 갯수 :  2
20의 갯수 :  1
------------------------------
20의 위치값 :  1
30의 위치값 :  2
30의 위치값 :  5
------------------------------
데이터의 갯수 :  6
데이터의 최댓값 :  50
데이터의 최솟값 :  10
데이터의 총합 :  180
데이터의 정렬 :  [10, 20, 30, 30, 40, 50]
데이터의 정렬(내림차순) :  [50, 40, 30, 30, 20, 10]
------------------------------
<generator object <genexpr> at 0x0000027A0F801F48>
'''